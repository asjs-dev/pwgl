(()=>{var $="$nodesConnected,removeEventListener,textureTransform,addEventListener,disconnect,$feedbackGainNode,$lowPassNode,$delayNode,lightRenderer,connect,filterRenderer,$gainNode,$highPassNode,transform,getOwnPropertyNames,$nodesCreated,$panNode,$disconnectNodes,$setOptions,highPassFilterFrequency,lowPassFilterFrequency,$connectNodes,object,renderToFramebuffer,$createNodes,createBiquadFilter,reverbFeedbackGain,currentTime,addLightForRender,touchmove,reverbDelayTime,touchstart,mousedown,mousemove,touchend".split(",");"use strict";var $m=Math,$w=window,$n=null,$o=Object;var FPS={init(){this.fps=this.delay=this.$d=this.$r=this.$E=0;this.$d=Date.now();this.$F=1e3/60},update(){var b=Date.now();this.delay=(b-this.$d)/this.$F;this.$d=b;this.$r++;if(b>=this.$E+1e3){this.fps=(this.$r*1e3)/(b-this.$E);this.$E=b;this.$r=0}}};FPS.start=FPS.init;class PressState{constructor(){this.$j={};this.$H={};this.$G={}};isDown(b){return this.$j[b]===0};isUp(b){return this.$j[b]===1};isPressed(b){return this.isUp(b)&&this.$G[b]<=200};isLongPressed(b){return this.isUp(b)&&this.$G[b]>200};update(){for(var c in this.$j)if(this.$j[c]){delete this.$j[c];delete this.$G[c];delete this.$H[c]}};$setDownState(b){this.$j[b]=0;this.$H[b]=Date.now()};$setUpState(b){var d=Date.now();this.$j[b]=1;this.$G[b]=d-this.$H[b];this.$H[b]=d}};class Mouse extends PressState{constructor(c){super();this.position={x:0,y:0};this.$s=c??$w;this.$B={mousedown:1,mouseup:1,touchstart:0,touchend:0};this.$Q=this.$Q.bind(this);this.$I=this.$I.bind(this);this.$R=this.$R.bind(this);this.$s[$[3]]($[32],this.$Q);this.$s[$[3]]("mouseup",this.$I);this.$s[$[3]]($[33],this.$R);this.$s[$[3]]($[31],this.$Q);this.$s[$[3]]($[34],this.$I);this.$s[$[3]]($[29],this.$R)};destruct(){this.$s[$[1]]($[32],this.$Q);this.$s[$[1]]("mouseup",this.$I);this.$s[$[1]]($[33],this.$R);this.$s[$[1]]($[31],this.$Q);this.$s[$[1]]($[34],this.$I);this.$s[$[1]]($[29],this.$R)};$Q(b){if(this.$B[b.type]===b.which){this.$setDownState(0)}};$I(b){if(this.$B[b.type]===b.which){this.$setUpState(0)}};$R(b){var d=b.type===$[29]?b.touches[0]:b;this.position.x=d.clientX;this.position.y=d.clientY}};class Keyboard extends PressState{constructor(c){super();this.$s=c??$w;this.$J=this.$J.bind(this);this.$C=this.$C.bind(this);this.$s[$[3]]("keydown",this.$J);this.$s[$[3]]("keyup",this.$C)};destruct(){this.$s[$[1]]("keydown",this.$J);this.$s[$[1]]("keyup",this.$C)};$J(b){this.$setDownState(b.keyCode)};$C(b){this.$setUpState(b.keyCode)}};class Gamepad{get gamepads(){return navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads||[]};get(b){var f=this.gamepads[b];return f?{axes:f.axes.map((c)=>$m.abs(c)>=.05?c:0),buttons:f.buttons.map((d)=>typeof d==="number"?{pressed:d===1,touched:d===1,value:d}:d),timestamp:f.timestamp}:$n}};var areObjectsEqual=(a,b)=>{if(typeof a!==typeof b)return 0;if(typeof a!==$[22])return a===b;var c=$o[$[14]](a),d=$o[$[14]](b);if(c.length!==d.length)return 0;var f,g,h,j;var i=c.length;while((f=c[--i])){g=a[f];h=b[f];if(g!==h){j=0;if(typeof g===$[22]&&typeof h===$[22])j=areObjectsEqual(g,h);if(!j)return 0}};return 1};var clone=(c)=>{if(typeof c!==$[22]||c===$n||c===undefined)return c;var d=Array.isArray(c)?[]:{};var f=$o[$[14]](c);var b,i=f.length;while((b=f[--i]))d[b]=typeof c[b]===$[22]?clone(c[b]):c[b];return d};class DataObserver{constructor(c={}){this.$j=c;this.$K=clone(this.$j);this.$b=0;this.$M=this.$M.bind(this);this.$M()};start(){this.$b=1};stop(){this.$b=0};$M(){if(this.$b&&!areObjectsEqual(this.$j,this.$K)){var b=clone(this.$j),d=clone(this.$K);this.$t(b,d);this.$K=b};requestAnimationFrame(this.$M)}};var mix=(a,b,c)=>c*a+(1-c)*b;var fadeAudioVolume=(g,b,c,d)=>(g.volume=mix(b,c,d));var crossFadeAudioVolumes=(h,j,b,c,d)=>{var f=mix(b,c,d);h.volume=f;j.volume=1-f};class ABA{get volume(){return this.$v};set volume(c){this.$v=c;if(this[$[0]])this[$[11]].gain.value=c};get pan(){return this.$c};set pan(b){this.$c=b;if(this[$[0]])this[$[16]].pan.value=b};get reverbDelayTime(){return this.$V};set reverbDelayTime(g){this.$V=g;if(this[$[0]])this[$[7]].delayTime.value=g};get reverbFeedbackGain(){return this.$X};set reverbFeedbackGain(k){this.$X=k;if(this[$[0]])this[$[5]].gain.value=k};get lowPassFilterFrequency(){return this.$Y};set lowPassFilterFrequency(h){this.$Y=h;if(this[$[0]])this[$[6]].frequency.value=h};get highPassFilterFrequency(){return this.$Z};set highPassFilterFrequency(h){this.$Z=h;if(this[$[0]])this[$[12]].frequency.value=h};$createNodes(d){if(d){this[$[11]]=d.createGain();this[$[16]]=d.createStereoPanner();this[$[7]]=d.createDelay();this[$[5]]=d.createGain();this[$[6]]=d[$[25]]();this[$[6]].type="lowpass";this[$[12]]=d[$[25]]();this[$[12]].type="highpass";this[$[15]]=1}};$connectNodes(j){if(j&&this[$[15]]){this[$[11]][$[9]](this[$[16]]);this[$[16]][$[9]](this[$[7]]);this[$[7]][$[9]](this[$[5]]);this[$[5]][$[9]](this[$[7]]);this[$[7]][$[9]](this[$[12]]);this[$[12]][$[9]](this[$[6]]);this[$[6]][$[9]](j);this[$[0]]=1}};$disconnectNodes(){if(this[$[0]]){this[$[11]][$[4]]();this[$[16]][$[4]]();this[$[7]][$[4]]();this[$[5]][$[4]]();this[$[6]][$[4]]();this[$[11]]=this[$[16]]=this[$[7]]=this[$[5]]=this[$[6]]=$n;this[$[0]]=this[$[15]]=0}};$setOptions(f){this.volume=f.volume??1;this.pan=f.pan??0;this[$[30]]=f[$[30]]??0;this[$[26]]=f[$[26]]??0;this[$[20]]=f[$[20]]??22050;this[$[19]]=f[$[19]]??0}};class AudioItem extends ABA{constructor(b=$n,j={}){super();this[$[18]](j);this.load(b)};get loop(){return this.$f};set loop(d){this.$f=d;if(this[$[0]])this.$w.loop=d};get pitch(){return this.$k};set pitch(g){this.$k=g;if(this[$[0]])this.$w.playbackRate.value=g};async load(b){if(b){this.url=b;this.$T=await fetch(b);this.$t()}};unload(){this[$[4]]();this.$x=$n};connect(l){if(this.$N!==l){this[$[4]]();this.$N=l;this.$t();l[$[9]](this)}};disconnect(){if(this.$N){this.stop();this.$N[$[4]](this);this.$N=$n}};play(f=0){this.stop();this.isPlaying=1;var l=this.$N,k=l.context;this[$[24]](k);this[$[21]](l.node);if(k){this.$L=k[$[27]];try{this[$[0]]&&this.$w.start(k[$[27]],f)}catch(e){}};this[$[18]](this)};stop(){this.isPlaying=0;var l=this.$N,h=this.$x;if(l&&h)this.$L=(l.context[$[27]]-this.$L)%h.duration;this[$[17]]()};resume(){this.play(this.$L)};$createNodes(k){var h=this.$x;if(k&&h){this.$w=k.createBufferSource();this.$w.buffer=h;super[$[24]](k)}};$connectNodes(m){if(m&&this[$[15]]){this.$w[$[9]](this[$[11]]);super[$[21]](m)}};$disconnectNodes(){if(this[$[0]]){this.$w.stop();this.$w[$[4]]();this.$w=$n;super[$[17]]()}};$setOptions(j={}){this.loop=j.loop??0;this.pitch=j.pitch??1;super[$[18]](j)};async $t(){var p=this.$T,l=this.$N;if(p&&l){var n=await p.arrayBuffer();this.$x=await l.context.decodeAudioData(n);this.isPlaying&&this.play()}}};class AudioMixer extends ABA{constructor(c={}){super();var d=new($w.AudioContext||$w.webkitAudioContext)();this.$D=d;this.$l=[];this[$[24]](d);this[$[21]](d.destination);this[$[18]](c)};get context(){return this.$D};get node(){return this[$[11]]};play(){this.$l.forEach((b)=>b.play())};stop(){this.$l.forEach((b)=>b.stop())};destruct(){this.stop();this[$[17]]()};resume(){this.$l.forEach((b)=>b.resume())};connect(f){if(!this.$l.includes(f)){this.$l.push(f);f[$[9]](this)}};disconnect(f){if(this.$l.includes(f)){this.$l.splice(this.$l.indexOf(f),1);f[$[4]]()}}};class SmoothLight extends AGL.Image{constructor(b={}){super();this.$S=new AGL.Framebuffer;this[$[8]]=new AGL.LightRenderer(b);this.$y=new AGL.BlurFilter;this[$[10]]=new AGL.FilterRenderer({config:{context:this[$[8]].context},sourceTexture:this.$S,filters:[this.$y]});this[$[10]].clearColor.set(0,0,0,0);this[$[10]].clearBeforeRender=1;this[$[28]]=this[$[8]][$[28]].bind(this[$[8]]);this.blendMode=AGL.BlendMode.SHADOW;this.$W=new AGL.Framebuffer;this.texture=this.$W;this.blur=typeof b.blur==="number"?b.blur:1};get blur(){return this.$g};set blur(v){this.$g=this.$y.intensityX=this.$y.intensityY=v};render(){this.$O();this[$[8]][$[23]](this.$S);this[$[10]][$[23]](this.$W)};setSize(w,h){this.$m=w;this.$z=h;this.$O=this.$A};$A(){this.$O=()=>{};this[$[8]].setSize(this.$m,this.$z);this[$[10]].setSize(this.$m,this.$z)}};class AnimatedWater extends AGL.Container{constructor(n,b=1,c=0,d=1){super();this.$m=1;this.$z=1;var p=AGL.Texture.loadImage(n);p.magFilter=AGL.Const.LINEAR;this.$U=new AGL.Image;this.addChild(this.$U);this.$cb=new AGL.Image(p);this.$cb.blendMode=AGL.BlendMode.ADD;this.$cb[$[2]].repeatX=.7;this.$cb.tintType=AGL.Image.TintType.GRAYSCALE;this.addChild(this.$cb);this.$cc=new AGL.Image(p);this.$cc.blendMode=AGL.BlendMode.ADD;this.$cc[$[2]].repeatX=4;this.$cc[$[2]].repeatRandomRotation=1;this.$cc.tintType=AGL.Image.TintType.GRAYSCALE;this.addChild(this.$cc);this.speed=b;this.level=c;this.scale=d;this.$P={x:0,y:0};this.$h=0};get speed(){return this.$n};set speed(v){this.$n=v};get scale(){return this.$p};set scale(v){this.$p=v;this.$cb.color.set(0,.1*v,.75,1);this.$cc.color.set(0,.06*v,.75,1)};get level(){return this.$q};set level(v){this.$q=v;this.$U.color.g=v};setSize(w,h){this.$m=w;this.$z=h;var f=h/w;this.$cc[$[13]].width=this.$cb[$[13]].width=this.$U[$[13]].width=w;this.$cc[$[13]].height=this.$cb[$[13]].height=this.$U[$[13]].height=h;this.$cc[$[2]].repeatY=this.$cc[$[2]].repeatX*f;this.$cb[$[2]].repeatY=this.$cb[$[2]].repeatX*f};render(g){var l=this.$n*g,m=l*2;this.$h+=l*2.5;var j=$m.sin(this.$h)*.3,k=$m.cos(this.$h)*.3;var q=this.$cb[$[2]];q.x=this.$P.x*q.repeatX+((l*.75+j)%1);q.y=this.$P.y*q.repeatY+((m*.75+k)%1);q=this.$cc[$[2]];q.x=this.$P.x*q.repeatX+((l*2-j)%1);q.y=this.$P.y*q.repeatY+((m*2-k)%1)};move(x,y){this.$P.x=x/this.$m;this.$P.y=y/this.$z}};var clamp=(b,c,d)=>$m.max(b,$m.min(c,d));var cross=(a,b)=>a.x*b.y-a.y*b.x;var dot=(a,b)=>a.x*b.x+a.y*b.y;var distanceBetweenPointAndLine=(p,l)=>{var j={x:l.b.x-l.a.x,y:l.b.y-l.a.y},k={x:p.x-l.a.x,y:p.y-l.a.y},m={x:p.x-l.b.x,y:p.y-l.b.y},n=dot(j,k)<0,q=dot(j,m)>0;if(!n&&!q)return $m.abs(cross(j,k))/$m.hypot(j.x,j.y);var P=n?k:m;return $m.hypot(P.x,P.y)};var areTwoLinesCollided=(r,s)=>{var a=r.b.y-r.a.y,b=r.b.x-r.a.x,c=s.b.y-s.a.y,d=s.b.x-s.a.x,t=b*c-d*a;if(t!==0){var e=s.b.x-r.a.x,f=s.a.x-s.b.x,g=s.b.y-r.a.y,h=r.a.y-r.b.y,y=(c*e+f*g)/t,v=(h*e+b*g)/t;if(y>0&&y<1&&v>0&&v<1)return{lambda:y,gamma:v}}};var lineToLineIntersection=(r,s)=>{var z=areTwoLinesCollided(r,s);return z?{x:r.a.x+(r.b.x-r.a.x)*z.lambda,y:r.a.y+(r.b.y-r.a.y)*z.lambda}:$n};var areTwoRectsCollided=(w,x)=>w.width>x.x&&w.x<x.width&&w.height>x.y&&w.y<x.height;var rectToRectIntersection=(w,x)=>areTwoRectsCollided(w,x)?{x:$m.max(w.x,x.x),y:$m.max(w.y,x.y),width:$m.min(w.width,x.width),height:$m.min(w.height,x.height)}:$n;var collisionDetection={distanceBetweenPointAndLine,areTwoLinesCollided,lineToLineIntersection,areTwoRectsCollided,rectToRectIntersection};var enterFrame=(f)=>{var h,g=0;var d=()=>{if(g){FPS.update();f(FPS.fps,FPS.delay);h=requestAnimationFrame(d)}};var c=()=>{if(!g){g=1;FPS.init();d()}};var b=()=>{cancelAnimationFrame(h);g=0};c();return{c,b,get isPlaying(){return g}}};var enumCheck=(c,b)=>(c&b)===b;var fract=(f)=>f%1;var getFPS=async()=>new Promise((d)=>{requestAnimationFrame((c)=>requestAnimationFrame((b)=>d($m.round(1e3/(b-c)))))});var nthCall=(g,b,d=0)=>{var f=b-(d+1);return(...c)=>!(f=f>-1?(1+f)%b:++f)&&g(...c)};var hash=1;var rand=(x,y,b)=>(hash=$m.abs(fract(hash*(.12+34.56*x+b*y*78.9))));var fixRand=(x,y,b)=>fract($m.sin(dot({x,y},{x:$m.sin(x+y),y:$m.cos(y-x)*b}))*b)*.5+.5;var random={rand,fixRand};var generateDungeon=(F,J)=>{var G=[{x:1,y:0},{x:1,y:1},{x:0,y:1},{x:-1,y:1},{x:-1,y:0},{x:-1,y:-1},{x:0,y:-1}];var p=[];var d=Infinity;var f=Infinity;var g=-Infinity;var j=-Infinity;for(var i=0;i<F;i++){var C=getRandom(G);var H=clone(getRandom(J));if($m.random()<.5)H.data.reverse();var k={...H,x:0,y:0};var z=100;while(z--){var D=0;for(var I of p){if(areTwoRectsCollided({x:I.x,y:I.y,width:I.x+I.width,height:I.y+I.height},{x:k.x,y:k.y,width:k.x+k.width,height:k.y+k.height})){var b=$m.random()-.5;var L=$m.round(($m.random()-.5)*2);k.x+=C.x?b>=0||!C.y?C.x:L:L;k.y+=C.y?b<0||!C.x?C.y:L:L;D=1;break}};if(!D)break};d=$m.min(k.x,d);f=$m.min(k.y,f);g=$m.max(k.x+k.width,g);j=$m.max(k.y+k.height,j);p.push(k)};var q=g-d,t=j-f;var l=Array(q*t).fill(0);p.forEach(({x,y,width:w,height:h,data:A})=>{var m=x-d,n=y-f;A.forEach((r,s)=>{const{x:px,y:py}=vectorToCoord(s,w);l[coordToVector(m+px,n+py,q)]=r})});for(var i=0,c=l.length-q;i<c;i++){const{x:px,y:py}=vectorToCoord(i,q);if(px<q-1&&l[i]>0){var E=coordToVector(px,py+1,q);var B=coordToVector(px+1,py,q);var M=coordToVector(px+1,py+1,q);var v=coordToVector(px-1,py,q);var K=coordToVector(px-1,py+1,q);if(l[E]===l[B]&&l[i]===l[M]&&l[i]!==l[B]){l[E]=l[B]=1};if(px>0&&l[E]===l[v]&&l[i]===l[K]&&l[i]!==l[v]){l[E]=l[v]=1}}};return{width:q,height:t,data:l}};$w.PWGLExtensions=$w.AGLExtensions={version:"0.1.0",FPS,DataObserver,PressState,Mouse,Keyboard,Gamepad,AudioItem,AudioMixer,fadeAudioVolume,crossFadeAudioVolumes,SmoothLight,AnimatedWater,areObjectsEqual,clamp,mix,clone,collisionDetection,cross,dot,enterFrame,enumCheck,fract,getFPS,nthCall,random,generateDungeon};console.log(`%cPWGL Extensions v${AGLExtensions.version}\nhttps:\/\/github.com/asjs-dev/pwgl`,"background:#222;color:#0F0");})();